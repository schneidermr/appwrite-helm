---
# Source: appwrite-helm/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: default
  labels:
    app.kubernetes.io/name: default
    pod-security.kubernetes.io/enforce: privileged
#    pod-security.kubernetes.io/enforce-version: v1.26
    pod-security.kubernetes.io/audit: baseline
#    pod-security.kubernetes.io/audit-version: v1.26
    pod-security.kubernetes.io/warn: restricted
#    pod-security.kubernetes.io/warn-version: v1.26
---
# Source: appwrite-helm/templates/secret.yml
apiVersion: v1
kind: Secret
metadata:
  name: "appwrite-env"
  namespace: "default"
  labels:
    app.kubernetes.io/name: "appwrite-env"
    helm.sh/chart: appwrite-helm-0.1.0
    app.kubernetes.io/version: 1.4.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: appwrite
    app.kubernetes.io/part-of: appwrite
type: Opaque
data:
  _APP_OPENSSL_KEY_V1: "Q3JTb0VCVEVRWkszY3lOOUxRMGNJUjBua2d1dzExUGwzWUxaQnd6Vg=="
  _APP_REDIS_USER: ""
  _APP_REDIS_PASS: ""
  _APP_DB_USER: "dXNlcg=="
  _APP_DB_PASS: "eW91ci1zZWNyZXQtcGFzc3dvcmQ="
  _APP_DB_ROOT_PASS: cm9vdC1zZWNyZXQtcm9vdC1wYXNzd29yZA==
  _APP_STORAGE_S3_ACCESS_KEY: ""
  _APP_STORAGE_S3_SECRET: ""
  _APP_STORAGE_DO_SPACES_ACCESS_KEY: ""
  _APP_STORAGE_DO_SPACES_SECRET: ""
  _APP_STORAGE_BACKBLAZE_ACCESS_KEY: ""
  _APP_STORAGE_BACKBLAZE_SECRET: ""
  _APP_STORAGE_LINODE_ACCESS_KEY: ""
  _APP_STORAGE_LINODE_SECRET: ""
  _APP_STORAGE_WASABI_ACCESS_KEY: ""
  _APP_STORAGE_WASABI_SECRET: ""
  _APP_SMTP_USERNAME: ""
  _APP_SMTP_PASSWORD: ""
  _APP_EXECUTOR_SECRET: "QmlyUnI2SE1JRWNVVnBBTkx6a28wdG9mbXdtMnFTRXdhN0tia1NtRg=="
  _APP_DOCKER_HUB_USERNAME: ""
  _APP_DOCKER_HUB_PASSWORD: ""
  _APP_VCS_GITHUB_PRIVATE_KEY: "ZGlzYWJsZWQ="
  _APP_VCS_GITHUB_CLIENT_SECRET: ""
  _APP_VCS_GITHUB_WEBHOOK_SECRET: ""
  _APP_MIGRATIONS_FIREBASE_CLIENT_SECRET: ""
  _APP_ASSISTANT_OPENAI_API_KEY: ""
---
# Source: appwrite-helm/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "appwrite-env"
  namespace: "default"
  labels:
    app.kubernetes.io/name: "appwrite-env"
    helm.sh/chart: appwrite-helm-0.1.0
    app.kubernetes.io/version: 1.4.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: appwrite
    app.kubernetes.io/part-of: appwrite
data:
  _APP_ENV: "production"
  _APP_LOCALE: "en"
  _APP_WORKER_PER_CORE: "6"
  _APP_CONSOLE_WHITELIST_ROOT: ""
  _APP_CONSOLE_WHITELIST_EMAILS: ""
  _APP_CONSOLE_WHITELIST_IPS: ""
  _APP_SYSTEM_EMAIL_NAME: "Appwrite"
  _APP_SYSTEM_EMAIL_ADDRESS: "team@appwrite.io"
  _APP_SYSTEM_SECURITY_EMAIL_ADDRESS: "security@appwrite.io"
  _APP_SYSTEM_RESPONSE_FORMAT: ""
  _APP_OPTIONS_ABUSE: "disabled"
  _APP_OPTIONS_ROUTER_PROTECTION: "disabled"
  _APP_OPTIONS_FORCE_HTTPS: "disabled"
  _APP_OPTIONS_FUNCTIONS_FORCE_HTTPS: "disabled"
  _APP_DOMAIN: "localhost"
  _APP_DOMAIN_FUNCTIONS: "functions.localhost"
  _APP_DOMAIN_TARGET: "localhost"
  _APP_REDIS_HOST: "appwrite-redis-master.default.svc.cluster.local"
  _APP_REDIS_PORT: "6379"
  _APP_DB_HOST: "appwrite-mariadb.default.svc.cluster.local"
  _APP_DB_PORT: "3306"
  _APP_DB_SCHEMA: "appwrite"
  _APP_STORAGE_DEVICE: "Local"
  _APP_STORAGE_S3_ENDPOINT_URL: ""
  _APP_STORAGE_S3_REGION: "us-east-1"
  _APP_STORAGE_S3_BUCKET: ""
  _APP_STORAGE_DO_SPACES_REGION: "us-east-1"
  _APP_STORAGE_DO_SPACES_BUCKET: ""
  _APP_STORAGE_BACKBLAZE_REGION: "us-west-004"
  _APP_STORAGE_BACKBLAZE_BUCKET: ""
  _APP_STORAGE_LINODE_REGION: "eu-central-1"
  _APP_STORAGE_LINODE_BUCKET: ""
  _APP_STORAGE_WASABI_REGION: "eu-central-1"
  _APP_STORAGE_WASABI_BUCKET: ""
  _APP_STORAGE_ANTIVIRUS: "disabled"
  _APP_STORAGE_ANTIVIRUS_HOST: "clamav"
  _APP_STORAGE_ANTIVIRUS_PORT: "3310"
  _APP_INFLUXDB_HOST: "appwrite-influxdb.default.svc.cluster.local"
  _APP_INFLUXDB_PORT: "8086"
  _APP_STATSD_HOST: "telegraf.default.svc.cluster.local"
  _APP_STATSD_PORT: "8125"
  _APP_SMTP_HOST: ""
  _APP_SMTP_PORT: "25"
  _APP_SMTP_SECURE: ""
  _APP_SMS_PROVIDER: "sms://username:password@mock"
  _APP_SMS_FROM: "+123456789"
  _APP_STORAGE_LIMIT: "3e+07"
  _APP_STORAGE_PREVIEW_LIMIT: "2e+07"
  _APP_FUNCTIONS_SIZE_LIMIT: "3e+07"
  _APP_FUNCTIONS_TIMEOUT: "900"
  _APP_FUNCTIONS_BUILD_TIMEOUT: "900"
  _APP_FUNCTIONS_CPUS: ""
  _APP_FUNCTIONS_MEMORY: ""
  _APP_FUNCTIONS_INACTIVE_THRESHOLD: "600"
  _APP_FUNCTIONS_MAINTENANCE_INTERVAL: "600"
  _APP_EXECUTOR_HOST: "http://proxy.default.svc.cluster.local/v1"
  _APP_FUNCTIONS_RUNTIMES: "php-8.0,node-18.0,python-3.9,ruby-3.1"
  _APP_MAINTENANCE_INTERVAL: "86400"
  _APP_MAINTENANCE_RETENTION_CACHE: "2.592e+06"
  _APP_MAINTENANCE_RETENTION_EXECUTION: "1.2096e+06"
  _APP_MAINTENANCE_RETENTION_ABUSE: "86400"
  _APP_MAINTENANCE_RETENTION_AUDIT: "1.2096e+06"
  _APP_USAGE_AGGREGATION_INTERVAL: "5"
  _APP_MAINTENANCE_RETENTION_USAGE_HOURLY: "8.64e+06"
  _APP_MAINTENANCE_RETENTION_SCHEDULES: "86400"
  _APP_USAGE_STATS: "enabled"
  _APP_LOGGING_PROVIDER: ""
  _APP_LOGGING_CONFIG: ""
  _APP_GRAPHQL_MAX_BATCH_SIZE: "10"
  _APP_GRAPHQL_MAX_COMPLEXITY: "250"
  _APP_GRAPHQL_MAX_DEPTH: "3"
  _APP_VCS_GITHUB_APP_NAME: ""
  _APP_VCS_GITHUB_APP_ID: ""
  _APP_VCS_GITHUB_CLIENT_ID: ""
  _APP_MIGRATIONS_FIREBASE_CLIENT_ID: ""
---
# Source: appwrite-helm/templates/appwrite/appwrite_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: appwrite-app
  namespace: default
  labels:
    app.kubernetes.io/name: appwrite-app
    app.kubernetes.io/component: app
    helm.sh/chart: appwrite-helm-0.1.0
    app.kubernetes.io/version: 1.4.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: appwrite
    app.kubernetes.io/part-of: appwrite
spec:
  selector:
    app.kubernetes.io/name: appwrite-app
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  type: ClusterIP
---
# Source: appwrite-helm/templates/maintenance/maintenance.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appwrite-maintenance
  namespace: default
  labels:
    app.kubernetes.io/name: appwrite-maintenance
    app.kubernetes.io/component: maintenance
    helm.sh/chart: appwrite-helm-0.1.0
    app.kubernetes.io/version: 1.4.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: appwrite
    app.kubernetes.io/part-of: appwrite
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: appwrite-maintenance
  template:
    metadata:
      labels:
        app.kubernetes.io/name: appwrite-maintenance
        app.kubernetes.io/component: maintenance
        helm.sh/chart: appwrite-helm-0.1.0
        app.kubernetes.io/version: 1.4.13
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: appwrite
        app.kubernetes.io/part-of: appwrite
  spec:
    securityContext:
      fsGroup: 472
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 472
      runAsNonRoot: true
      runAsUser: 472
    containers:
      - name: maintenance
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        image: docker.io/appwrite/appwrite:1.4.13
        imagePullPolicy: IfNotPresent
        command:
          - maintenance
        ports:
          - containerPort: 80
            name: http
            protocol: TCP
        restartPolicy: OnFailure
        envFrom:
          - configMapRef:
              name: appwrite-env
          - secretRef:
              name: appwrite-env
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  revisionHistoryLimit: 5
---
# Source: appwrite-helm/templates/appwrite/appwrite.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: appwrite-app
  namespace: default
  labels:
    app.kubernetes.io/name: appwrite-app
    app.kubernetes.io/component: app
    helm.sh/chart: appwrite-helm-0.1.0
    app.kubernetes.io/version: 1.4.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: appwrite
    app.kubernetes.io/part-of: appwrite
spec:
  serviceName: appwrite-app
  replicas: 1
#  minReadySeconds: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: appwrite-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: appwrite-app
        app.kubernetes.io/component: app
        helm.sh/chart: appwrite-helm-0.1.0
        app.kubernetes.io/version: 1.4.13
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: appwrite
        app.kubernetes.io/part-of: appwrite
  spec:
    securityContext:
      fsGroup: 472
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 472
      runAsNonRoot: true
      runAsUser: 472
    containers:
      - name: app
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        image: docker.io/appwrite/appwrite:1.4.13
        imagePullPolicy: IfNotPresent
        command:
          - /bin/sh
          - -c
        args:
          - php
          - -e
          - app/http.php
          - -dopcache.preload=opcache.preload=/usr/src/code/app/preload.php
        ports:
          - containerPort: 80
            name: http
            protocol: TCP
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/health
            port: 80
          initialDelaySeconds: 30
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/health
            port: 80
        restartPolicy: OnFailure
        envFrom:
          - configMapRef:
              name: appwrite-env
          - secretRef:
              name: appwrite-env
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  revisionHistoryLimit: 5
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteMany" ]
      storageClassName: "my-storage-class"
      resources:
        requests:
          storage: 1Gi
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Delete
